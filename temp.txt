云数据中心作为满足社会算力需求的核心支柱，正面临资源利用率低下和应用执行效率不足的严峻挑战。为应对这一问题，自动性能调优成为关键手段，其核心目标是通过自动化调整系统及应用参数配置，提升应用在特定环境下的执行效率、响应速度与整体性能。目前，研究人员已在数据库系统和高性能计算等领域初步探索了自动性能调优技术，并取得了显著成果。然而，现有参数调优方案难以解决复杂场景的应用程序调优挑战。此外，在多应用混部场景中，现有研究通常仅关注参数调优或资源划分的单一维度，忽略了两者的依赖关系，导致性能损失。
针对上述问题，本文重新审视了应用性能调优的核心挑战，并从复杂场景单应用和混部场景多应用的性能调优两个角度展开深入研究，具体贡献如下：
·针对单应用调优中复杂的参数搜索空间、多目标冲突以及参数层次依赖等挑战，提出了一种面向复杂场景的参数调优方法MoTuner。MoTuner基于贝叶斯优化技术，在无先验知识的情况下高效探索多维参数空间，并通过改进的基于预期超容量的获取函数平衡相互冲突的多个目标。为应对参数之间的层次依赖关系，MoTuner设计了轮询优化结构与自动化的预算分配机制，从而解耦了参数的复杂依赖关系。实验结果表明，相较于最新的自动调优方法，MoTuner能够以最高3.57倍的速度找到更优的参数配置。
·针对多应用混部场景中参数调优与资源划分相互依赖且搜索空间庞大的挑战，首次形式化定义了协同调优问题，并提出了协调优化框架CoTuner。CoTuner采用分层架构组织多个异构协同学习模型，有效应对混部应用数量增加导致的复杂度指数增长。为在模型间共享优化知识，CoTuner引入上下文代理模型技术，显著提升调优效率。基于系统状态信息反映应用资源敏感度的洞察，CoTuner设计了搜索空间剪枝技术，避免大量不必要的配置采样。此外，CoTuner利用历史数据引导技术实现新混部场景的热启动优化。实验分析表明CoTuner的调优效率比最新方案提升了4.96倍。

Cloud data centers, as the core pillars supporting society's computing needs, are facing severe challenges of low resource utilization and insufficient application execution efficiency. To address this issue, automatic performance tuning has become a crucial approach. Its core objective is to improve application execution efficiency, response speed, and overall performance in specific environments by automatically adjusting system and application parameter configurations. Currently, researchers have preliminarily explored automatic performance tuning techniques in database systems and high-performance computing, achieving significant results. However, existing parameter tuning schemes struggle to solve application tuning challenges in complex scenarios.  Furthermore, in multi-application co-location scenarios, existing research typically focuses on a single dimension of either parameter tuning or resource allocation, ignoring their interdependence, leading to performance loss.

To address these issues, this paper revisits the core challenges of application performance tuning and conducts in-depth research from two perspectives: single-application tuning in complex scenarios and multi-application co-location tuning. The specific contributions are as follows:

For single-application tuning, addressing challenges such as complex parameter search space, multi-objective conflicts, and parameter hierarchy dependency, a parameter tuning method for complex scenarios, MoTuner, is proposed. MoTuner is based on Bayesian optimization technology, efficiently exploring the multi-dimensional parameter space without prior knowledge and balancing multiple conflicting objectives through an improved expected hypervolume-based acquisition function. To address the hierarchical dependency between parameters, MoTuner designs a polling optimization structure and an automated budget allocation mechanism to decouple the complex dependencies between parameters and accelerate the tuning process. Experimental results show that compared to the latest automatic tuning methods, MoTuner can find better parameter configurations up to 3.57 times faster.

For multi-application co-location scenarios, addressing the challenges of the interdependence between parameter tuning and resource allocation and the huge search space, the co-tuning problem is formally defined for the first time, and a coordinated optimization framework, CoTuner, is proposed. CoTuner uses a hierarchical architecture to organize multiple heterogeneous collaborative learning models, effectively addressing the exponential growth in complexity caused by an increasing number of co-located applications. To share optimization knowledge between models, CoTuner introduces context agent model technology, significantly improving tuning efficiency. Based on the insight that system state information reflects application resource sensitivity, CoTuner designs a search space pruning technique to avoid a large number of unnecessary configuration samplings.  Furthermore, CoTuner utilizes historical data-guided technology to achieve hot-start optimization for new co-location scenarios. Experimental analysis shows that CoTuner's tuning efficiency is 4.96 times higher than the latest scheme.